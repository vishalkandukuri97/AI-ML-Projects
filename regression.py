# -*- coding: utf-8 -*-
"""Regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ET2s0aKA8GfN80TVJIxjZ3o8kBfDmCnZ
"""



import pandas as pd

import numpy as np

df=pd.read_csv('/content/CarPrice_Assignment.csv')

!pip install scikit-learn

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from statsmodels.stats.outliers_influence import variance_inflation_factor

df['brand'] = df['CarName'].apply(lambda x: x.split(' ')[0].lower())

skewed_cols = ['price','enginesize','compressionratio','horsepower']
for col in skewed_cols:
    df[col] = np.log1p(df[col])

df = pd.get_dummies(df, drop_first=True)

X = df.drop("price", axis=1)
y = df["price"]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42
)

lr = LinearRegression()
lr.fit(X_train, y_train)

y_pred = lr.predict(X_test)

print("\nModel Performance:")
print("RÂ² Score:", r2_score(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))

X_df = pd.DataFrame(X_scaled, columns=X.columns)
vif_data = pd.DataFrame()
vif_data["Feature"] = X_df.columns
vif_data["VIF"] = [variance_inflation_factor(X_df.values, i) for i in range(X_df.shape[1])]
print("\nVariance Inflation Factors (VIF):")
print(vif_data.sort_values(by="VIF", ascending=False).head(15))